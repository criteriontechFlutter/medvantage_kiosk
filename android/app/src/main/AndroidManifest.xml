<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.digidoctorkiosktab.android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission
        android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <uses-permission
        android:name="android.permission.ACCESS_COARSE_LOCATION"/>
    <uses-permission
        android:name="android.permission.INTERNET"/>
    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission
        android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission
        android:name="android.permission.RECORD_AUDIO"/>
    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission
        android:name="android.permission.BLUETOOTH"/>
    <uses-permission
        android:name="android.permission.BLUETOOTH_ADMIN"/>
    <uses-permission
        android:name="android.permission.ACTIVITY_RECOGNITION"/>
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" tools:node="remove"/>
    <!--    <uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE" />-->
    <queries>
        <!-- If your app opens https URLs -->
        <intent>
            <action
                android:name="android.intent.action.VIEW"/>
            <data
                android:scheme="https"/>
        </intent>
        <!-- If your app makes calls -->
        <intent>
            <action
                android:name="android.intent.action.DIAL"/>
            <data
                android:scheme="tel"/>
        </intent>
        <!-- If your sends SMS messages -->
        <intent>
            <action
                android:name="android.intent.action.SENDTO"/>
            <data
                android:scheme="smsto"/>
        </intent>
        <!-- If your app sends emails -->
        <intent>
            <action
                android:name="android.intent.action.SEND"/>
            <data
                android:mimeType="*/*"/>
        </intent>
    </queries>
    <queries>
        <intent>
            <action android:name="android.speech.RecognitionService" />
        </intent>
    </queries>
    <application
        tools:replace="android:label"
        android:label="Kiosk Patient"
        android:usesCleartextTraffic="true"
        android:configChanges="orientation|screenSize|keyboardHidden"
        android:icon="@mipmap/kiosk_logo">
        <meta-data android:name="com.google.android.geo.API_KEY"
            android:value="AIzaSyB0AW2vBqSKJPqegh75EhUUxPljXPhaxqU"/>
        <activity
            android:name="com.yalantis.ucrop.UCropActivity"
            android:exported="true"

            android:theme="@style/Theme.AppCompat.Light.NoActionBar"/>
        <activity
            android:name="com.linusu.flutter_web_auth.CallbackActivity"
            android:exported="true">
            <intent-filter
                android:label="flutter_web_auth">
                <action
                    android:name="android.intent.action.VIEW"/>
                <category
                    android:name="android.intent.category.DEFAULT"/>
                <category
                    android:name="android.intent.category.BROWSABLE"/>
                <data
                    android:scheme="my.test.app"/>
                <!-- This must correspond to the custom scheme used for instantiatng the client... See below -->
            </intent-filter>
        </activity>
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize"
            android:showWhenLocked="true"
            android:turnScreenOn="true">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <!-- Deep linking -->
            <meta-data
                android:name="flutter_deeplinking_enabled"
                android:value="true"/>
            <intent-filter
                android:autoVerify="true">
                <action
                    android:name="android.intent.action.VIEW"/>
                <category
                    android:name="android.intent.category.DEFAULT"/>
                <category
                    android:name="android.intent.category.BROWSABLE"/>
                <data
                    android:scheme="http"
                    android:host="digiDoctor.com"/>
                <data
                    android:scheme="https"/>
            </intent-filter>
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme"/>
            <!-- Displays an Android View that continues showing the launch screen
                 Drawable until Flutter paints its first frame, then this splash
                 screen fades out. A splash screen is useful to avoid any visual
                 gap between the end of Android's launch screen and the painting of
                 Flutter's first frame. -->
            <meta-data
                android:name="io.flutter.embedding.android.SplashScreenDrawable"
                android:resource="@drawable/launch_background"/>
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <provider
            android:name="vn.hunghd.flutterdownloader.DownloadedFileProvider"
            android:authorities="${applicationId}.flutter_downloader.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths"/>
        </provider>
        <!-- Begin FlutterDownloader customization -->
        <!-- disable default Initializer -->
        <provider
            android:name="androidx.startup.InitializationProvider"
            android:authorities="${applicationId}.androidx-startup"
            android:exported="false"
            tools:node="merge">
            <meta-data
                android:name="androidx.work.WorkManagerInitializer"
                android:value="androidx.startup"
                tools:node="remove"/>
        </provider>
        <!-- declare customized Initializer -->
        <provider
            android:name="vn.hunghd.flutterdownloader.FlutterDownloaderInitializer"
            android:authorities="${applicationId}.flutter-downloader-init"
            android:exported="false">
            <!-- changes this number to configure the maximum number of concurrent tasks -->
            <meta-data
                android:name="vn.hunghd.flutterdownloader.MAX_CONCURRENT_TASKS"
                android:value="5"/>
        </provider>
        <!-- End FlutterDownloader customization -->
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2"/>
        <service
            android:name="org.jitsi.meet.sdk.ConnectionService"
            android:permission="android.permission.BIND_TELECOM_CONNECTION_SERVICE"
            android:exported="true">
            <intent-filter>
                <action android:name="android.telecom.ConnectionService" />
            </intent-filter>
            <meta-data
                android:name="com.google.firebase.messaging.default_notification_channel_id"
                android:value="high_importance_channel" />
        </service>
    </application>
</manifest>